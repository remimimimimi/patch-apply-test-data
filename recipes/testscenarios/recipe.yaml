context:
  name: testscenarios
  version: "0.5.0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/t/testscenarios/testscenarios-${{ version }}.tar.gz
  sha256: c257cb6b90ea7e6f8fef3158121d430543412c9a87df30b5dde6ec8b9b57a2b6
  patches:
    - remove-fix-tests.patch

build:
  noarch: python
  script: python -m pip install . -vv
  number: 0

requirements:
  host:
    # - python ${{ python_min }}.*
    - pbr >=0.11
    - pip
    - setuptools
  run:
    - pbr >=0.11
    # - python >=${{ python_min }}
    - testtools

# tests:
#   - python:
#       imports:
#         - testscenarios
#         - testscenarios.scenarios
#         - testscenarios.testcase
#         - testscenarios.tests
#       pip_check: true
#       # python_version: ${{ python_min }}.*
#   - script:
#       - if: unix
#         then:
#           - mkdir -p ${PREFIX}/__hack__
#           - cp -r doc/ README ${PREFIX}/__hack__
#           - python -m testtools.run testscenarios.test_suite
#         else:
#           - echo "Skip hacky test"
#           # - mkdir -p %PREFIX%\__hack__
#           # - cp -r doc README %PREFIX%\__hack__
#           # - python -m testtools.run testscenarios.test_suite
#     requirements:
#       run:
#         - python >=${{ python_min }}
#     files:
#       source:
#         - README
#         - doc/



about:
  homepage: https://github.com/testing-cabal/testscenarios
  summary: 'Testscenarios, a pyunit extension for dependency injection'
  description: |
    testscenarios provides clean dependency injection for python unittest
    style tests. This can be used for interface testing (testing many
    implementations via a single test suite) or for classic dependency
    injection (provide tests with dependencies externally to the test code
    itself, allowing easy testing in different situations).
  license: BSD-3-Clause
  license_file: BSD
  repository: https://github.com/testing-cabal/testscenarios

extra:
  recipe-maintainers:
    - MementoRC
