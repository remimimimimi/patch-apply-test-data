# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
#
# for the actual `uv` CLI tool (which does not require or link against `python`), see:
# - https://github.com/conda-forge/uv-feedstock
#
# _this_ package provides the `site-packages` content of the upstream PyPI package to:
# - appease `pip check` for downstreams which (presently) might use `uv`
#   programatically as a `run` dependency
# - eventually to provide a PEP517 backend as a `host` dependency, which _does_ require python
#
# for more context, see:
# - https://github.com/conda-forge/uv-feedstock/issues/42
#
schema_version: 1

context:
  version: "0.7.12"

package:
  name: python-uv
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/u/uv/uv-${{ version }}.tar.gz
  sha256: 4aa152e6a70d5662ca66a918f697bf8fb710f391068aa7d04e032af2edebb095
  patches:
    # replaces `maturin` with `setuptools`
    #
    #   this avoids
    #   - populating `(Library/)bin`
    #   - forcing {os x arch x python} builds
    #   and enables
    #   - the `uv` CLI (which can install its _own_ python) to be installed separately
    #
    - 0000-no-rust.patch
    # provide binary path in `sys.prefix`
    #
    #   this replaces machinery which doesn't work with conda-forge packaging on osx/win
    #   with a `sys.prefix`-relative path to the `uv` CLI provided by conda-forge/uv-feedstock
    #
    - 0001-use-conda-forge-bin.patch

build:
  number: 0
  noarch: python
  script:
    - ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check

requirements:
  host:
    - pip
    # - python ${{ python_min }}.*
    - setuptools
  run:
    # - python >=${{ python_min }}
    - uv ${{ version }}.*

# tests:
#   - python:
#       imports:
#         - uv
#         - uv._find_uv
#       pip_check: true
#       python_version:
#         - ${{ python_min }}.*
#         - 3.13.*
#   - requirements:
#       run:
#         - python ${{ python_min }}.*
#         - mypy
#     script:
#       - python -c "import uv; print(uv.find_uv_bin())"
#       - uv --version
#       - python -m uv --version
#       - mypy -p uv

about:
  summary: An extremely fast Python package and project manager, written in Rust. (with python)
  license: Apache-2.0 OR MIT
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
  homepage: https://pypi.org/project/uv
  repository: https://github.com/astral-sh/uv

extra:
  recipe-maintainers:
    - bollwyvl
    - conda-forge/uv
