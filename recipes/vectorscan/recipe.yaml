context:
  version: 5.4.11
  pcre_version: 8.45

package:
  name: vectorscan
  version: ${{ version }}

source:
  - url: https://github.com/VectorCamp/vectorscan/archive/refs/tags/vectorscan/${{ version }}.tar.gz
    sha256: 905f76ad1fa9e4ae0eb28232cac98afdb96c479666202c5a4c27871fb30a2711
    target_directory: vectorscan
    patches:
      - 0001-fix-the-pcre-versio-check-error-on-clang-16.patch
# chimera requires the pcre sources to be available during the build
  - url: https://sourceforge.net/projects/pcre/files/pcre/${{ pcre_version }}/pcre-${{ pcre_version }}.tar.gz/download
    sha256: 4e6ce03e0336e8b4a3d6c2b70b1c5e18590a5673a98186da90d4f33c23defc09
    file_name: pcre-${{ pcre_version }}.tar.gz


build:
  number: 1
  skip: win
  script: |
    tar xvf pcre-${{ pcre_version }}.tar.gz
    mkdir build/
    cd build/
    cmake $CMAKE_ARGS -GNinja -DPCRE_SOURCE=$SRC_DIR/pcre-8.45 $SRC_DIR/vectorscan
    cmake --build . -- -j${CPU_COUNT}
    cmake --build . --target install

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - cmake
    - ninja
    - pkg-config
    - tar
    - ragel
  host:
    - libboost-devel
    - libsqlite
    - pcre
    - libzlib


tests:
  - package_contents:
      include:
        - hs/ch.h
      lib:
        - libchimera.a
        - libhs.a
        - libhs_runtime.a

about:
  summary: A portable fork of the high-performance regular expression matching library
  description: |
    A fork of Intel's Hyperscan, modified to run on more platforms. Currently
    ARM NEON/ASIMD and Power VSX are 100% functional. ARM SVE2 support is in
    ongoing with access to hardware now. More platforms will follow in the
    future. Further more, starting 5.4.12 there is now a SIMDe port, which can
    be either used for platforms without official SIMD support, as SIMDe can
    emulate SIMD instructions, or as an alternative backend for existing
    architectures, for reference and comparison purposes.
  license: BSD-3-Clause
  license_file:
    - vectorscan/COPYING
    - vectorscan/LICENSE
  homepage: https://www.vectorcamp.gr/project/vectorscan/
  documentation: http://intel.github.io/hyperscan/dev-reference/

extra:
  recipe-maintainers:
    - chrisburr
